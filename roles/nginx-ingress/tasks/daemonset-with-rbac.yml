---
  - name: Delete Nginx Ingress controller Deployment (if present)
    k8s_apps_v1beta1_deployment:
      name: nginx-ingress-controller
      namespace: '{{nginx_ingress_ns}}'
      state: absent

  - name: Delete Nginx Ingress Service (if present)
    k8s_v1_service:
      name: ingress-nginx
      namespace: '{{nginx_ingress_ns}}'
      state: absent

  - name: Deploy Nginx Ingress controller DaemonSet
    k8s_v1beta1_daemon_set:
      name: nginx-ingress-controller
      namespace: '{{nginx_ingress_ns}}'
      spec_selector_match_labels:
        app: ingress-nginx
      spec_template_spec_node_selector:
        ingressnode: nginx
      spec_template_spec_host_network: true
      spec_template_metadata_labels:
        app: ingress-nginx
      spec_template_metadata_annotations:
        prometheus.io/port: '10254'
        prometheus.io/scrape: 'true'
      spec_template_spec_service_account_name: nginx-ingress-serviceaccount
      spec_template_spec_containers:
        - name: nginx-ingress-controller
          image: '{{nginx_ingress_image}}'
          args:
            - /nginx-ingress-controller
            - --ingress-class={{nginx_ingress_class|default("nginx")}}
            - --default-backend-service=$(POD_NAMESPACE)/default-http-backend
            - --configmap=$(POD_NAMESPACE)/nginx-configuration
            - --tcp-services-configmap=$(POD_NAMESPACE)/tcp-services
            - --udp-services-configmap=$(POD_NAMESPACE)/udp-services
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
          - name: http
            containerPort: 80
          - name: https
            containerPort: 443
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
